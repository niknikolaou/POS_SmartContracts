/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../common";

export type BuildingStruct = {
  Currentlevel: PromiseOrValue<BigNumberish>;
  Pending: PromiseOrValue<boolean>;
  Start: PromiseOrValue<BigNumberish>;
  Finish: PromiseOrValue<BigNumberish>;
};

export type BuildingStructOutput = [
  BigNumber,
  boolean,
  BigNumber,
  BigNumber
] & {
  Currentlevel: BigNumber;
  Pending: boolean;
  Start: BigNumber;
  Finish: BigNumber;
};

export type PlayerStruct = {
  register: PromiseOrValue<boolean>;
  buildings: [BuildingStruct, BuildingStruct, BuildingStruct];
};

export type PlayerStructOutput = [
  boolean,
  [BuildingStructOutput, BuildingStructOutput, BuildingStructOutput]
] & {
  register: boolean;
  buildings: [BuildingStructOutput, BuildingStructOutput, BuildingStructOutput];
};

export interface PathOfNicolasInterface extends utils.Interface {
  functions: {
    "CompleteUpdateBuilding(uint256)": FunctionFragment;
    "CurrectTime()": FunctionFragment;
    "GetUserInfo(address)": FunctionFragment;
    "RegisterInGame()": FunctionFragment;
    "UpdateBuilding(uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "CompleteUpdateBuilding"
      | "CurrectTime"
      | "GetUserInfo"
      | "RegisterInGame"
      | "UpdateBuilding"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "CompleteUpdateBuilding",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "CurrectTime",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "GetUserInfo",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "RegisterInGame",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "UpdateBuilding",
    values: [PromiseOrValue<BigNumberish>]
  ): string;

  decodeFunctionResult(
    functionFragment: "CompleteUpdateBuilding",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "CurrectTime",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "GetUserInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "RegisterInGame",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "UpdateBuilding",
    data: BytesLike
  ): Result;

  events: {};
}

export interface PathOfNicolas extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: PathOfNicolasInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    CompleteUpdateBuilding(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    CurrectTime(overrides?: CallOverrides): Promise<[BigNumber]>;

    GetUserInfo(
      wallet: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[PlayerStructOutput]>;

    RegisterInGame(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    UpdateBuilding(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  CompleteUpdateBuilding(
    _id: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  CurrectTime(overrides?: CallOverrides): Promise<BigNumber>;

  GetUserInfo(
    wallet: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<PlayerStructOutput>;

  RegisterInGame(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  UpdateBuilding(
    _id: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    CompleteUpdateBuilding(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    CurrectTime(overrides?: CallOverrides): Promise<BigNumber>;

    GetUserInfo(
      wallet: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PlayerStructOutput>;

    RegisterInGame(overrides?: CallOverrides): Promise<void>;

    UpdateBuilding(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    CompleteUpdateBuilding(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    CurrectTime(overrides?: CallOverrides): Promise<BigNumber>;

    GetUserInfo(
      wallet: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    RegisterInGame(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    UpdateBuilding(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    CompleteUpdateBuilding(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    CurrectTime(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    GetUserInfo(
      wallet: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    RegisterInGame(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    UpdateBuilding(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
